# swagger.yml

openapi: 3.0.0
info:
  title: "ASCARIS REST API"
  description: "An API for ASCARIS, a digital semantic publishing application"
  version: "1.0.0"

servers:
  - url: "/api/v1/"

components:
  schemas:
    Title:
      type: "object"
      properties:
        id:
          type: "number"
        document_id:
          type: "number"
        text:
          type: "string"
        language:
          type: "string"
    Responsibility:
      type: "object"
      properties:
        id:
          type: "number"
        document_id:
          type: "number"
        surname:
          type: "string"
        name:
          type: "string"
        authority:
          type: "string"
        role:
          type: "string"
    PubAuthority:
      type: "object"
      properties:
        id:
          type: "number"
        document_id:
          type: "number"
        name:
          type: "string"
        authority:
          type: "string"
        role:
          type: "string"
    Identifier:
      type: "object"
      properties:
        id:
          type: "number"
        document_id:
          type: "number"
        text:
          type: "string"
        type:
          type: "string"
    Source:
      type: "object"
      properties:
        id:
          type: "number"
        document_id:
          type: "number"
        text:
          type: "string"
    Note:
      type: "object"
      properties:
        id:
          type: "number"
        document_id:
          type: "number"
        text:
          type: "string"
    Category:
      type: "object"
      properties:
        id:
          type: "number"
        document_id:
          type: "number"
        type:
          type: "string"
    PubDate:
      type: "object"
      properties:
        id:
          type: "number"
        document_id:
          type: "number"
        date:
          type: "string"
          format: "date-time"
    PubPlace:
      type: "object"
      properties:
        id:
          type: "number"
        document_id:
          type: "number"
        name:
          type: "string"
        authority:
          type: "string"
    License:
      type: "object"
      properties:
        id:
          type: "number"
        document_id:
          type: "number"
        text:
          type: "string"
        link:
          type: "string"
    Abstract:
      type: "object"
      properties:
        id:
          type: "number"
        document_id:
          type: "number"
        text:
          type: "string"
    CreationDate:
      type: "object"
      properties:
        id:
          type: "number"
        document_id:
          type: "number"
        date:
          type: "string"
          format: "date-time"

    Annotation:
      type: "object"
      properties:
        id: 
          type: "number"
        document_id:
          type: "number"
        reference_id:
          type: "number"
        text:
          type: "string"
        motivation:
          type: "string"
        language:
          type: "string"
        license:
          type: "string"
    Reference:
      type: "object"
      properties:
        id:
          type: "number"
        document_id:
          type: "number"
        entity_id:
          type: "number"
        text:
          type: "string"
        type:
          type: "string"
        annotation:
          type: "array"
          items:
            $ref: "#/components/schemas/Annotation"
    Entity:
      type: "object"
      properties:
        id:
          type: "number"
        document_id:
          type: "number"
        type:
          type: "string"
        label:
          type: "string"
        authority:
          type: "string"
        reference:
          type: "array"
          items:
            $ref: "#/components/schemas/Reference"

    Document:
      type: "object"
      required:
        - id
      properties:
        docTitle:
          type: "string"
        content:
          type: "string"
          
        entity:
          type: "array"
          items:
            $ref: "#/components/schemas/Entity"
        reference:
          type: "array"
          items:
            $ref: "#/components/schemas/Reference"

        title:
          type: "array"
          items:
            $ref: "#/components/schemas/Title"
        responsibility:
          type: "array"
          items:
            $ref: "#/components/schemas/Responsibility"
        pubAuthority:
          type: "array"
          items:
            $ref: "#/components/schemas/PubAuthority"
        identifier:
          type: "array"
          items:
            $ref: "#/components/schemas/Identifier"
        source:
          type: "array"
          items:
            $ref: "#/components/schemas/Source"
        note:
          type: "array"
          items:
            $ref: "#/components/schemas/Note"
        category:
          type: "array"
          items:
            $ref: "#/components/schemas/Category"
        pubDate:
          type: "array"
          items:
            $ref: "#/components/schemas/PubDate"
        pubPlace:
          type: "array"
          items:
            $ref: "#/components/schemas/PubPlace"
        license:
          type: "array"
          items:
            $ref: "#/components/schemas/License"
        abstract:
          type: "array"
          items:
            $ref: "#/components/schemas/Abstract"
        creationDate:
          type: "array"
          items:
            $ref: "#/components/schemas/CreationDate"
          
  parameters:
    id:
      name: "id"
      description: "Identifier of the document to get"
      in: path
      required: True
      schema:
        type: "number"
    entity_id:
      name: "entity_id"
      description: "Identifier of the entity"
      in: path
      required: True
      schema:
        type: "number"
    reference_id:
      name: "reference_id"
      description: "Identifier of the reference"
      in: path
      required: True
      schema:
        type: "number"
    annotation_id:
      name: "annotation_id"
      description: "Identifier of the annotation"
      in: path
      required: True
      schema:
        type: "number"
    title_id:
      name: "title_id"
      description: "Identifier of the title"
      in: path
      required: True
      schema:
        type: "integer"
    responsibility_id:
      name: "responsibility_id"
      description: "Identifier of the responsibility"
      in: path
      required: True
      schema:
        type: "integer"
    pubAuthority_id:
      name: "pubAuthority_id"
      description: "Identifier of the pubAuthority"
      in: path
      required: True
      schema:
        type: "integer"
    identifier_id:
      name: "identifier_id"
      description: "Identifier of the identifier"
      in: path
      required: True
      schema:
        type: "integer"
    source_id:
      name: "source_id"
      description: "Identifier of the source"
      in: path
      required: True
      schema:
        type: "integer"
    note_id:
      name: "note_id"
      description: "Identifier of the note"
      in: path
      required: True
      schema:
        type: "integer"
    category_id:
      name: "category_id"
      description: "Identifier of the category"
      in: path
      required: True
      schema:
        type: "integer"
    pubDate_id:
      name: "pubDate_id"
      description: "Identifier of the pubDate"
      in: path
      required: True
      schema:
        type: "integer"
    pubPlace_id:
      name: "pubPlace_id"
      description: "Identifier of the pubPlace"
      in: path
      required: True
      schema:
        type: "integer"
    license_id:
      name: "license_id"
      description: "Identifier of the license"
      in: path
      required: True
      schema:
        type: "integer"
    abstract_id:
      name: "abstract_id"
      description: "Identifier of the abstract"
      in: path
      required: True
      schema:
        type: "integer"
    creationDate_id:
      name: "creationDate_id"
      description: "Identifier of the creationDate"
      in: path
      required: True
      schema:
        type: "integer"

paths:

  /document:
    get:
      operationId: "document.read_all"
      tags:
        - "Document"
      summary: "Read the list of documents"
      responses:
        "200":
          description: "Success: read document list"
    post:
      operationId: "document.create"
      tags:
        - Document
      summary: "Create a document"
      requestBody:
        description: "Document to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "document"
              type: "object"
              properties:
                docTitle:
                  type: "string"
                content:
                  type: "string"
      responses:
        "201":
          description: "Success: document created"

  /document/{id}:
    get:
      operationId: "document.read_one"
      tags:
        - Document
      summary: "Read one document"
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "Success: read document"
    put:
      tags:
        - Document
      operationId: "document.update"
      summary: "Update a document"
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "Success: updated document"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "document"
              $ref: "#/components/schemas/Document"
    delete:
      tags:
        - Document
      operationId: "document.delete"
      summary: "Delete a document"
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          description: "Success: deleted document"

  /entity:
    get:
      operationId: "entity.read_all"
      tags:
        - "Entity"
      summary: "Read the list of entities"
      responses:
        "200":
          description: "Success: read entity list"
    post:
      operationId: "entity.create"
      tags:
        - Entity
      summary: "Create an entity"
      requestBody:
        description: "Entity to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "entity"
              type: "object"
              properties:
                document_id:
                  type: "number"
                type:
                  type: "string"
                label:
                  type: "string"
                authority:
                  type: "string"
      responses:
        "201":
          description: "Success: entity created"
  
  /entity/{entity_id}:
    get:
      operationId: "entity.read_one"
      tags:
        - Entity
      summary: "Read one entity"
      parameters:
        - $ref: "#/components/parameters/entity_id"
      responses:
        "200":
          description: "Success: read entity"
    put:
      tags:
        - Entity
      operationId: "entity.update"
      summary: "Update an entity"
      parameters:
        - $ref: "#/components/parameters/entity_id"
      responses:
        "200":
          description: "Success: updated entity"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "entity"
              type: "object"
              properties:
                label:
                  type: "string"
                authority:
                  type: "string"
                type:
                  type: "string"
    delete:
      tags:
        - Entity
      operationId: "entity.delete"
      summary: "Delete an entity"
      parameters:
        - $ref: "#/components/parameters/entity_id"
      responses:
        "204":
          description: "Success: deleted entity"

  /reference:
    post:
      operationId: "reference.create"
      tags:
        - Reference
      summary: "Create a reference"
      requestBody:
        description: "Reference to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "reference"
              type: "object"
              properties:
                document_id:
                  type: "number"
                entity_id:
                  type: "number"
                type:
                  type: "string"
                text:
                  type: "string"
      responses:
        "201":
          description: "Success: reference created"
  
  /reference/{reference_id}:
    get:
      operationId: "reference.read_one"
      tags:
        - Reference
      summary: "Read one reference"
      parameters:
        - $ref: "#/components/parameters/reference_id"
      responses:
        "200":
          description: "Success: read reference"
    put:
      tags:
        - Reference
      operationId: "reference.update"
      summary: "Update a reference"
      parameters:
        - $ref: "#/components/parameters/reference_id"
      responses:
        "200":
          description: "Success: updated reference"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "reference"
              type: "object"
              properties:
                text:
                  type: "string"
                type:
                  type: "string"
    delete:
      tags:
        - Reference
      operationId: "reference.delete"
      summary: "Delete a reference"
      parameters:
        - $ref: "#/components/parameters/reference_id"
      responses:
        "204":
          description: "Success: deleted reference"

  /annotation:
    post:
      operationId: "annotation.create"
      tags:
        - Annotation
      summary: "Create a annotation"
      requestBody:
        description: "annotation to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "annotation"
              type: "object"
              properties:
                document_id:
                  type: "number"
                reference_id:
                  type: "number"
                text:
                  type: "string"
                motivation:
                  type: "string"
                language:
                  type: "string"
                license:
                  type: "string"
      responses:
        "201":
          description: "Success: annotation created"
  
  /annotation/{annotation_id}:
    get:
      operationId: "annotation.read_one"
      tags:
        - Annotation
      summary: "Read one annotation"
      parameters:
        - $ref: "#/components/parameters/annotation_id"
      responses:
        "200":
          description: "Success: read annotation"
    put:
      tags:
        - Annotation
      operationId: "annotation.update"
      summary: "Update a annotation"
      parameters:
        - $ref: "#/components/parameters/annotation_id"
      responses:
        "200":
          description: "Success: updated annotation"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "annotation"
              type: "object"
              properties:
                text:
                  type: "string"
                motivation:
                  type: "string"
                language:
                  type: "string"
                license:
                  type: "string"
    delete:
      tags:
        - Annotation
      operationId: "annotation.delete"
      summary: "Delete a annotation"
      parameters:
        - $ref: "#/components/parameters/annotation_id"
      responses:
        "204":
          description: "Success: deleted annotation"

  /title:
    post:
      operationId: "title.create"
      tags:
        - Title
      summary: "Create a title associated with a document"
      requestBody:
        description: "Title to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "title"
              type: "object"
              properties:
                document_id:
                  type: "integer"
                text:
                  type: "string"
                language:
                  type: "string"
      responses:
        "201":
          description: "Success: title created"

  /title/{title_id}:
    get:
      operationId: "title.read_one"
      tags:
        - Title
      summary: "Read a title"
      parameters:
        - $ref: "#/components/parameters/title_id"
      responses:
        "200":
          description: "Success: read title"
    put:
      tags:
        - Title
      operationId: "title.update"
      summary: "Update a title"
      parameters:
        - $ref: "#/components/parameters/title_id"
      responses:
        "200":
          description: "Success: title updated"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "title"
              type: "object"
              properties:
                text:
                  type: "string"
                language:
                  type: "string"
    delete:
      tags:
        - Title
      operationId: "title.delete"
      summary: "Delete a title"
      parameters:
        - $ref: "#/components/parameters/title_id"
      responses:
        "204":
          description: "Success: title deleted"
  
  /responsibility:
    post:
      operationId: "responsibility.create"
      tags:
        - Responsibility
      summary: "Create a responsibility associated with a document"
      requestBody:
        description: "Responsibility to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "responsibility"
              type: "object"
              properties:
                document_id:
                  type: "integer"
                surname:
                  type: "string"
                name:
                  type: "string"
                authority:
                  type: "string"
                role:
                  type: "string"
      responses:
        "201":
          description: "Success: responsibility created"

  /responsibility/{responsibility_id}:
    get:
      operationId: "responsibility.read_one"
      tags:
        - Responsibility
      summary: "Read a responsibility"
      parameters:
        - $ref: "#/components/parameters/responsibility_id"
      responses:
        "200":
          description: "Success: responsibility read"
    put:
      tags:
        - Responsibility
      operationId: "responsibility.update"
      summary: "Update a responsibility"
      parameters:
        - $ref: "#/components/parameters/responsibility_id"
      responses:
        "200":
          description: "Success: responsibility updated"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "responsibility"
              type: "object"
              properties:
                surname:
                  type: "string"
                name:
                  type: "string"
                authority:
                  type: "string"
                role:
                  type: "string"
    delete:
      tags:
        - Responsibility
      operationId: "responsibility.delete"
      summary: "Delete a responsibility"
      parameters:
        - $ref: "#/components/parameters/responsibility_id"
      responses:
        "204":
          description: "Success: responsibility deleted"

  /pubAuthority:
    post:
      operationId: "pubAuthority.create"
      tags:
        - PubAuthority
      summary: "Create a pubAuthority associated with a document"
      requestBody:
        description: "pubAuthority to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "pubAuthority"
              type: "object"
              properties:
                document_id:
                  type: "integer"
                name:
                  type: "string"
                authority:
                  type: "string"
                role:
                  type: "string"
      responses:
        "201":
          description: "Success: pubAuthority created"

  /pubAuthority/{pubAuthority_id}:
    get:
      operationId: "pubAuthority.read_one"
      tags:
        - PubAuthority
      summary: "Read a pubAuthority"
      parameters:
        - $ref: "#/components/parameters/pubAuthority_id"
      responses:
        "200":
          description: "Success: pubAuthority read"
    put:
      tags:
        - PubAuthority
      operationId: "pubAuthority.update"
      summary: "Update a pubAuthority"
      parameters:
        - $ref: "#/components/parameters/pubAuthority_id"
      responses:
        "200":
          description: "Success: pubAuthority updated"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "pubAuthority"
              type: "object"
              properties:
                name:
                  type: "string"
                authority:
                  type: "string"
                role:
                  type: "string"
    delete:
      tags:
        - PubAuthority
      operationId: "pubAuthority.delete"
      summary: "Delete a pubAuthority"
      parameters:
        - $ref: "#/components/parameters/pubAuthority_id"
      responses:
        "204":
          description: "Success: pubAuthority deleted"

  /identifier:
    post:
      operationId: "identifier.create"
      tags:
        - Identifier
      summary: "Create a identifier associated with a document"
      requestBody:
        description: "identifier to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "identifier"
              type: "object"
              properties:
                document_id:
                  type: "integer"
                text:
                  type: "string"
                language:
                  type: "string"
      responses:
        "201":
          description: "Success: identifier created"

  /identifier/{identifier_id}:
    get:
      operationId: "identifier.read_one"
      tags:
        - Identifier
      summary: "Read a identifier"
      parameters:
        - $ref: "#/components/parameters/identifier_id"
      responses:
        "200":
          description: "Success: read identifier"
    put:
      tags:
        - Identifier
      operationId: "identifier.update"
      summary: "Update a identifier"
      parameters:
        - $ref: "#/components/parameters/identifier_id"
      responses:
        "200":
          description: "Success: identifier updated"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "identifier"
              type: "object"
              properties:
                text:
                  type: "string"
                language:
                  type: "string"
    delete:
      tags:
        - Identifier
      operationId: "identifier.delete"
      summary: "Delete a identifier"
      parameters:
        - $ref: "#/components/parameters/identifier_id"
      responses:
        "204":
          description: "Success: identifier deleted"

  /source:
    post:
      operationId: "source.create"
      tags:
        - Source
      summary: "Create a source associated with a document"
      requestBody:
        description: "source to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "source"
              type: "object"
              properties:
                document_id:
                  type: "integer"
                text:
                  type: "string"
      responses:
        "201":
          description: "Success: source created"

  /source/{source_id}:
    get:
      operationId: "source.read_one"
      tags:
        - Source
      summary: "Read a source"
      parameters:
        - $ref: "#/components/parameters/source_id"
      responses:
        "200":
          description: "Success: read source"
    put:
      tags:
        - Source
      operationId: "source.update"
      summary: "Update a source"
      parameters:
        - $ref: "#/components/parameters/source_id"
      responses:
        "200":
          description: "Success: source updated"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "source"
              type: "object"
              properties:
                text:
                  type: "string"
    delete:
      tags:
        - Source
      operationId: "source.delete"
      summary: "Delete a source"
      parameters:
        - $ref: "#/components/parameters/source_id"
      responses:
        "204":
          description: "Success: source deleted"

  /note:
    post:
      operationId: "note.create"
      tags:
        - Note
      summary: "Create a note associated with a document"
      requestBody:
        description: "note to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "note"
              type: "object"
              properties:
                document_id:
                  type: "integer"
                text:
                  type: "string"
      responses:
        "201":
          description: "Success: note created"

  /note/{note_id}:
    get:
      operationId: "note.read_one"
      tags:
        - Note
      summary: "Read a note"
      parameters:
        - $ref: "#/components/parameters/note_id"
      responses:
        "200":
          description: "Success: read note"
    put:
      tags:
        - Note
      operationId: "note.update"
      summary: "Update a note"
      parameters:
        - $ref: "#/components/parameters/note_id"
      responses:
        "200":
          description: "Success: note updated"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "note"
              type: "object"
              properties:
                text:
                  type: "string"
    delete:
      tags:
        - Note
      operationId: "note.delete"
      summary: "Delete a note"
      parameters:
        - $ref: "#/components/parameters/note_id"
      responses:
        "204":
          description: "Success: note deleted"

  /category:
    post:
      operationId: "category.create"
      tags:
        - Category
      summary: "Create a category associated with a document"
      requestBody:
        description: "category to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "category"
              type: "object"
              properties:
                document_id:
                  type: "integer"
                type:
                  type: "string"
      responses:
        "201":
          description: "Success: category created"

  /category/{category_id}:
    get:
      operationId: "category.read_one"
      tags:
        - Category
      summary: "Read a category"
      parameters:
        - $ref: "#/components/parameters/category_id"
      responses:
        "200":
          description: "Success: read category"
    put:
      tags:
        - Category
      operationId: "category.update"
      summary: "Update a category"
      parameters:
        - $ref: "#/components/parameters/category_id"
      responses:
        "200":
          description: "Success: category updated"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "category"
              type: "object"
              properties:
                type:
                  type: "string"
    delete:
      tags:
        - Category
      operationId: "category.delete"
      summary: "Delete a category"
      parameters:
        - $ref: "#/components/parameters/category_id"
      responses:
        "204":
          description: "Success: category deleted"

  /pubDate:
    post:
      operationId: "pubDate.create"
      tags:
        - PubDate
      summary: "Create a pubDate associated with a document"
      requestBody:
        description: "pubDate to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "pubDate"
              type: "object"
              properties:
                document_id:
                  type: "integer"
                date:
                  type: "string"
                  format: "date-time"
      responses:
        "201":
          description: "Success: pubDate created"

  /pubDate/{pubDate_id}:
    get:
      operationId: "pubDate.read_one"
      tags:
        - PubDate
      summary: "Read a pubDate"
      parameters:
        - $ref: "#/components/parameters/pubDate_id"
      responses:
        "200":
          description: "Success: read pubDate"
    put:
      tags:
        - PubDate
      operationId: "pubDate.update"
      summary: "Update a pubDate"
      parameters:
        - $ref: "#/components/parameters/pubDate_id"
      responses:
        "200":
          description: "Success: pubDate updated"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "pubDate"
              type: "object"
              properties:
                date:
                  type: "string"
                  format: "date-time"
    delete:
      tags:
        - PubDate
      operationId: "pubDate.delete"
      summary: "Delete a pubDate"
      parameters:
        - $ref: "#/components/parameters/pubDate_id"
      responses:
        "204":
          description: "Success: pubDate deleted"

  /pubPlace:
    post:
      operationId: "pubPlace.create"
      tags:
        - PubPlace
      summary: "Create a pubPlace associated with a document"
      requestBody:
        description: "pubPlace to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "pubPlace"
              type: "object"
              properties:
                document_id:
                  type: "integer"
                name:
                  type: "string"
                authority: 
                  type: "string"
      responses:
        "201":
          description: "Success: pubPlace created"

  /pubPlace/{pubPlace_id}:
    get:
      operationId: "pubPlace.read_one"
      tags:
        - PubPlace
      summary: "Read a pubPlace"
      parameters:
        - $ref: "#/components/parameters/pubPlace_id"
      responses:
        "200":
          description: "Success: read pubPlace"
    put:
      tags:
        - PubPlace
      operationId: "pubPlace.update"
      summary: "Update a pubPlace"
      parameters:
        - $ref: "#/components/parameters/pubPlace_id"
      responses:
        "200":
          description: "Success: pubPlace updated"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "pubPlace"
              type: "object"
              properties:
                name:
                  type: "string"
                authority: 
                  type: "string"
    delete:
      tags:
        - PubPlace
      operationId: "pubPlace.delete"
      summary: "Delete a pubPlace"
      parameters:
        - $ref: "#/components/parameters/pubPlace_id"
      responses:
        "204":
          description: "Success: pubPlace deleted"

  /license:
    post:
      operationId: "license.create"
      tags:
        - License
      summary: "Create a license associated with a document"
      requestBody:
        description: "license to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "license"
              type: "object"
              properties:
                document_id:
                  type: "integer"
                text:
                  type: "string"
                link: 
                  type: "string"
      responses:
        "201":
          description: "Success: license created"

  /license/{license_id}:
    get:
      operationId: "license.read_one"
      tags:
        - License
      summary: "Read a license"
      parameters:
        - $ref: "#/components/parameters/license_id"
      responses:
        "200":
          description: "Success: read license"
    put:
      tags:
        - License
      operationId: "license.update"
      summary: "Update a license"
      parameters:
        - $ref: "#/components/parameters/license_id"
      responses:
        "200":
          description: "Success: license updated"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "license"
              type: "object"
              properties:
                text:
                  type: "string"
                link: 
                  type: "string"
    delete:
      tags:
        - License
      operationId: "license.delete"
      summary: "Delete a license"
      parameters:
        - $ref: "#/components/parameters/license_id"
      responses:
        "204":
          description: "Success: license deleted"

  /abstract:
    post:
      operationId: "abstract.create"
      tags:
        - Abstract
      summary: "Create a abstract associated with a document"
      requestBody:
        description: "abstract to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "abstract"
              type: "object"
              properties:
                document_id:
                  type: "integer"
                text:
                  type: "string"
      responses:
        "201":
          description: "Success: abstract created"

  /abstract/{abstract_id}:
    get:
      operationId: "abstract.read_one"
      tags:
        - Abstract
      summary: "Read a abstract"
      parameters:
        - $ref: "#/components/parameters/abstract_id"
      responses:
        "200":
          description: "Success: read abstract"
    put:
      tags:
        - Abstract
      operationId: "abstract.update"
      summary: "Update a abstract"
      parameters:
        - $ref: "#/components/parameters/abstract_id"
      responses:
        "200":
          description: "Success: abstract updated"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "abstract"
              type: "object"
              properties:
                text:
                  type: "string"
    delete:
      tags:
        - Abstract
      operationId: "abstract.delete"
      summary: "Delete a abstract"
      parameters:
        - $ref: "#/components/parameters/abstract_id"
      responses:
        "204":
          description: "Success: abstract deleted"

  /creationDate:
    post:
      operationId: "creationDate.create"
      tags:
        - CreationDate
      summary: "Create a creationDate associated with a document"
      requestBody:
        description: "creationDate to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "creationDate"
              type: "object"
              properties:
                document_id:
                  type: "integer"
                date:
                  type: "string"
                  format: "date-time"
      responses:
        "201":
          description: "Success: creationDate created"

  /creationDate/{creationDate_id}:
    get:
      operationId: "creationDate.read_one"
      tags:
        - CreationDate
      summary: "Read a creationDate"
      parameters:
        - $ref: "#/components/parameters/creationDate_id"
      responses:
        "200":
          description: "Success: read creationDate"
    put:
      tags:
        - CreationDate
      operationId: "creationDate.update"
      summary: "Update a creationDate"
      parameters:
        - $ref: "#/components/parameters/creationDate_id"
      responses:
        "200":
          description: "Success: creationDate updated"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "creationDate"
              type: "object"
              properties:
                date:
                  type: "string"
                  format: "date-time"
    delete:
      tags:
        - CreationDate
      operationId: "creationDate.delete"
      summary: "Delete a creationDate"
      parameters:
        - $ref: "#/components/parameters/creationDate_id"
      responses:
        "204":
          description: "Success: creationDate deleted"